{"ast":null,"code":"var _jsxFileName = \"/home/nico/expero/toolkit/chatty/client/src/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { HubConnectionBuilder } from '@microsoft/signalr';\nimport ChatWindow from './ChatWindow';\nimport ChatInput from './ChatInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [connection, setConnection] = useState(null);\n  const [chat, setChat] = useState([]);\n  const latestChat = useRef(null);\n  latestChat.current = chat;\n  useEffect(() => {\n    const newConnection = new HubConnectionBuilder().withUrl('https://localhost:5054/chatHub', {\n      skipNegotiation: true\n    }).withAutomaticReconnect().build();\n    setConnection(newConnection);\n  }, []);\n  useEffect(() => {\n    if (connection) {\n      connection.start().then(result => {\n        console.log('Connected!');\n        connection.on('ReceiveMessage', message => {\n          const updatedChat = [...latestChat.current];\n          updatedChat.push(message);\n          setChat(updatedChat);\n        });\n      }).catch(e => console.log('Connection failed: ', e));\n    }\n  }, [connection]);\n  const sendMessage = async (user, message) => {\n    const chatMessage = {\n      user: user,\n      message: message\n    };\n    if (connection.connectionStarted) {\n      try {\n        await connection.send('SendMessage', chatMessage);\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      alert('No connection to server yet.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ChatInput, {\n      sendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n      chat: chat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"ZvQuAD9qKvwjXseaeCvzaVAbzDc=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","HubConnectionBuilder","ChatWindow","ChatInput","jsxDEV","_jsxDEV","Chat","_s","connection","setConnection","chat","setChat","latestChat","current","newConnection","withUrl","skipNegotiation","withAutomaticReconnect","build","start","then","result","console","log","on","message","updatedChat","push","catch","e","sendMessage","user","chatMessage","connectionStarted","send","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/nico/expero/toolkit/chatty/client/src/Chat.js"],"sourcesContent":["\nimport React, { useState, useEffect, useRef } from 'react';\nimport { HubConnectionBuilder } from '@microsoft/signalr';\n\nimport ChatWindow from './ChatWindow';\nimport ChatInput from './ChatInput';\n\nconst Chat = () => {\n    const [ connection, setConnection ] = useState(null);\n    const [ chat, setChat ] = useState([]);\n    const latestChat = useRef(null);\n\n    latestChat.current = chat;\n\n    useEffect(() => {\n        const newConnection = new HubConnectionBuilder()\n            .withUrl('https://localhost:5054/chatHub', {\n              skipNegotiation:true\n            })\n            .withAutomaticReconnect()\n            .build();\n\n        setConnection(newConnection);\n    }, []);\n\n    useEffect(() => {\n        if (connection) {\n            connection.start()\n                .then(result => {\n                    console.log('Connected!');\n    \n                    connection.on('ReceiveMessage', message => {\n                        const updatedChat = [...latestChat.current];\n                        updatedChat.push(message);\n                    \n                        setChat(updatedChat);\n                    });\n                })\n                .catch(e => console.log('Connection failed: ', e));\n        }\n    }, [connection]);\n\n    const sendMessage = async (user, message) => {\n        const chatMessage = {\n            user: user,\n            message: message\n        };\n\n        if (connection.connectionStarted) {\n            try {\n                await connection.send('SendMessage', chatMessage);\n            }\n            catch(e) {\n                console.log(e);\n            }\n        }\n        else {\n            alert('No connection to server yet.');\n        }\n    }\n\n    return (\n        <div>\n            <ChatInput sendMessage={sendMessage} />\n            <hr />\n            <ChatWindow chat={chat}/>\n        </div>\n    );\n};\n\nexport default Chat;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,oBAAoB,QAAQ,oBAAoB;AAEzD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAAEC,UAAU,EAAEC,aAAa,CAAE,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAEY,IAAI,EAAEC,OAAO,CAAE,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMc,UAAU,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAE/BY,UAAU,CAACC,OAAO,GAAGH,IAAI;EAEzBX,SAAS,CAAC,MAAM;IACZ,MAAMe,aAAa,GAAG,IAAIb,oBAAoB,CAAC,CAAC,CAC3Cc,OAAO,CAAC,gCAAgC,EAAE;MACzCC,eAAe,EAAC;IAClB,CAAC,CAAC,CACDC,sBAAsB,CAAC,CAAC,CACxBC,KAAK,CAAC,CAAC;IAEZT,aAAa,CAACK,aAAa,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,MAAM;IACZ,IAAIS,UAAU,EAAE;MACZA,UAAU,CAACW,KAAK,CAAC,CAAC,CACbC,IAAI,CAACC,MAAM,IAAI;QACZC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QAEzBf,UAAU,CAACgB,EAAE,CAAC,gBAAgB,EAAEC,OAAO,IAAI;UACvC,MAAMC,WAAW,GAAG,CAAC,GAAGd,UAAU,CAACC,OAAO,CAAC;UAC3Ca,WAAW,CAACC,IAAI,CAACF,OAAO,CAAC;UAEzBd,OAAO,CAACe,WAAW,CAAC;QACxB,CAAC,CAAC;MACN,CAAC,CAAC,CACDE,KAAK,CAACC,CAAC,IAAIP,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEM,CAAC,CAAC,CAAC;IAC1D;EACJ,CAAC,EAAE,CAACrB,UAAU,CAAC,CAAC;EAEhB,MAAMsB,WAAW,GAAG,MAAAA,CAAOC,IAAI,EAAEN,OAAO,KAAK;IACzC,MAAMO,WAAW,GAAG;MAChBD,IAAI,EAAEA,IAAI;MACVN,OAAO,EAAEA;IACb,CAAC;IAED,IAAIjB,UAAU,CAACyB,iBAAiB,EAAE;MAC9B,IAAI;QACA,MAAMzB,UAAU,CAAC0B,IAAI,CAAC,aAAa,EAAEF,WAAW,CAAC;MACrD,CAAC,CACD,OAAMH,CAAC,EAAE;QACLP,OAAO,CAACC,GAAG,CAACM,CAAC,CAAC;MAClB;IACJ,CAAC,MACI;MACDM,KAAK,CAAC,8BAA8B,CAAC;IACzC;EACJ,CAAC;EAED,oBACI9B,OAAA;IAAA+B,QAAA,gBACI/B,OAAA,CAACF,SAAS;MAAC2B,WAAW,EAAEA;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCnC,OAAA;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNnC,OAAA,CAACH,UAAU;MAACQ,IAAI,EAAEA;IAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEd,CAAC;AAACjC,EAAA,CA7DID,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AA+DV,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}