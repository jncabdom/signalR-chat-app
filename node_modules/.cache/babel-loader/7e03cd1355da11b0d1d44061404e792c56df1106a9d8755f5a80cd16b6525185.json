{"ast":null,"code":"import _regeneratorRuntime from \"/home/nico/expero/toolkit/signalR-test/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/home/nico/expero/toolkit/signalR-test/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/home/nico/expero/toolkit/signalR-test/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/home/nico/expero/toolkit/signalR-test/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/nico/expero/toolkit/signalR-test/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/nico/expero/toolkit/signalR-test/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/nico/expero/toolkit/signalR-test/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\nimport { LogLevel } from \"./ILogger\";\nimport { Platform, getGlobalThis, isArrayBuffer } from \"./Utils\";\nexport var FetchHttpClient = /*#__PURE__*/function (_HttpClient) {\n  _inherits(FetchHttpClient, _HttpClient);\n  var _super = _createSuper(FetchHttpClient);\n  function FetchHttpClient(logger) {\n    var _this;\n    _classCallCheck(this, FetchHttpClient);\n    _this = _super.call(this);\n    _this._logger = logger;\n    if (typeof fetch === \"undefined\") {\n      // In order to ignore the dynamic require in webpack builds we need to do this magic\n      // @ts-ignore: TS doesn't know about these names\n      var requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\n      // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\n      _this._jar = new (requireFunc(\"tough-cookie\").CookieJar)();\n      _this._fetchType = requireFunc(\"node-fetch\");\n      // node-fetch doesn't have a nice API for getting and setting cookies\n      // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\n      _this._fetchType = requireFunc(\"fetch-cookie\")(_this._fetchType, _this._jar);\n    } else {\n      _this._fetchType = fetch.bind(getGlobalThis());\n    }\n    if (typeof AbortController === \"undefined\") {\n      // In order to ignore the dynamic require in webpack builds we need to do this magic\n      // @ts-ignore: TS doesn't know about these names\n      var _requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\n      // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\n      _this._abortControllerType = _requireFunc(\"abort-controller\");\n    } else {\n      _this._abortControllerType = AbortController;\n    }\n    return _this;\n  }\n  /** @inheritDoc */\n  _createClass(FetchHttpClient, [{\n    key: \"send\",\n    value: function () {\n      var _send = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _this2 = this;\n        var abortController, error, timeoutId, msTimeout, response, errorMessage, content, payload;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(request.abortSignal && request.abortSignal.aborted)) {\n                _context.next = 2;\n                break;\n              }\n              throw new AbortError();\n            case 2:\n              if (request.method) {\n                _context.next = 4;\n                break;\n              }\n              throw new Error(\"No method defined.\");\n            case 4:\n              if (request.url) {\n                _context.next = 6;\n                break;\n              }\n              throw new Error(\"No url defined.\");\n            case 6:\n              abortController = new this._abortControllerType();\n              // Hook our abortSignal into the abort controller\n              if (request.abortSignal) {\n                request.abortSignal.onabort = function () {\n                  abortController.abort();\n                  error = new AbortError();\n                };\n              }\n              // If a timeout has been passed in, setup a timeout to call abort\n              // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\n              timeoutId = null;\n              if (request.timeout) {\n                msTimeout = request.timeout;\n                timeoutId = setTimeout(function () {\n                  abortController.abort();\n                  _this2._logger.log(LogLevel.Warning, \"Timeout from HTTP request.\");\n                  error = new TimeoutError();\n                }, msTimeout);\n              }\n              if (request.content === \"\") {\n                request.content = undefined;\n              }\n              if (request.content) {\n                // Explicitly setting the Content-Type header for React Native on Android platform.\n                request.headers = request.headers || {};\n                if (isArrayBuffer(request.content)) {\n                  request.headers[\"Content-Type\"] = \"application/octet-stream\";\n                } else {\n                  request.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\n                }\n              }\n              _context.prev = 12;\n              _context.next = 15;\n              return this._fetchType(request.url, {\n                body: request.content,\n                cache: \"no-cache\",\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\n                headers: _objectSpread({\n                  \"X-Requested-With\": \"XMLHttpRequest\"\n                }, request.headers),\n                method: request.method,\n                mode: \"cors\",\n                redirect: \"follow\",\n                signal: abortController.signal\n              });\n            case 15:\n              response = _context.sent;\n              _context.next = 24;\n              break;\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](12);\n              if (!error) {\n                _context.next = 22;\n                break;\n              }\n              throw error;\n            case 22:\n              this._logger.log(LogLevel.Warning, \"Error from HTTP request. \".concat(_context.t0, \".\"));\n              throw _context.t0;\n            case 24:\n              _context.prev = 24;\n              if (timeoutId) {\n                clearTimeout(timeoutId);\n              }\n              if (request.abortSignal) {\n                request.abortSignal.onabort = null;\n              }\n              return _context.finish(24);\n            case 28:\n              if (response.ok) {\n                _context.next = 33;\n                break;\n              }\n              _context.next = 31;\n              return deserializeContent(response, \"text\");\n            case 31:\n              errorMessage = _context.sent;\n              throw new HttpError(errorMessage || response.statusText, response.status);\n            case 33:\n              content = deserializeContent(response, request.responseType);\n              _context.next = 36;\n              return content;\n            case 36:\n              payload = _context.sent;\n              return _context.abrupt(\"return\", new HttpResponse(response.status, response.statusText, payload));\n            case 38:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[12, 18, 24, 28]]);\n      }));\n      function send(_x) {\n        return _send.apply(this, arguments);\n      }\n      return send;\n    }()\n  }, {\n    key: \"getCookieString\",\n    value: function getCookieString(url) {\n      var cookies = \"\";\n      if (Platform.isNode && this._jar) {\n        // @ts-ignore: unused variable\n        this._jar.getCookies(url, function (e, c) {\n          return cookies = c.join(\"; \");\n        });\n      }\n      return cookies;\n    }\n  }]);\n  return FetchHttpClient;\n}(HttpClient);\nfunction deserializeContent(response, responseType) {\n  var content;\n  switch (responseType) {\n    case \"arraybuffer\":\n      content = response.arrayBuffer();\n      break;\n    case \"text\":\n      content = response.text();\n      break;\n    case \"blob\":\n    case \"document\":\n    case \"json\":\n      throw new Error(\"\".concat(responseType, \" is not supported.\"));\n    default:\n      content = response.text();\n      break;\n  }\n  return content;\n}","map":{"version":3,"names":["AbortError","HttpError","TimeoutError","HttpClient","HttpResponse","LogLevel","Platform","getGlobalThis","isArrayBuffer","FetchHttpClient","_HttpClient","_inherits","_super","_createSuper","logger","_this","_classCallCheck","call","_logger","fetch","requireFunc","__webpack_require__","__non_webpack_require__","require","_jar","CookieJar","_fetchType","bind","AbortController","_abortControllerType","_createClass","key","value","_send","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","_this2","abortController","error","timeoutId","msTimeout","response","errorMessage","content","payload","wrap","_callee$","_context","prev","next","abortSignal","aborted","method","Error","url","onabort","abort","timeout","setTimeout","log","Warning","undefined","headers","body","cache","credentials","withCredentials","_objectSpread","mode","redirect","signal","sent","t0","concat","clearTimeout","finish","ok","deserializeContent","statusText","status","responseType","abrupt","stop","send","_x","apply","arguments","getCookieString","cookies","isNode","getCookies","e","c","join","arrayBuffer","text"],"sources":["/home/nico/expero/toolkit/signalR-test/client/node_modules/@microsoft/signalr/src/FetchHttpClient.ts"],"sourcesContent":["// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// @ts-ignore: This will be removed from built files and is here to make the types available during dev work\r\nimport { CookieJar } from \"@types/tough-cookie\";\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { Platform, getGlobalThis, isArrayBuffer } from \"./Utils\";\r\n\r\nexport class FetchHttpClient extends HttpClient {\r\n    private readonly _abortControllerType: { prototype: AbortController, new(): AbortController };\r\n    private readonly _fetchType: (input: RequestInfo, init?: RequestInit) => Promise<Response>;\r\n    private readonly _jar?: CookieJar;\r\n\r\n    private readonly _logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this._logger = logger;\r\n\r\n        if (typeof fetch === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n\r\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n            this._jar = new (requireFunc(\"tough-cookie\")).CookieJar();\r\n            this._fetchType = requireFunc(\"node-fetch\");\r\n\r\n            // node-fetch doesn't have a nice API for getting and setting cookies\r\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n            this._fetchType = requireFunc(\"fetch-cookie\")(this._fetchType, this._jar);\r\n        } else {\r\n            this._fetchType = fetch.bind(getGlobalThis());\r\n        }\r\n        if (typeof AbortController === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n\r\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n            this._abortControllerType = requireFunc(\"abort-controller\");\r\n        } else {\r\n            this._abortControllerType = AbortController;\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public async send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n\r\n        const abortController = new this._abortControllerType();\r\n\r\n        let error: any;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId: any = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout!;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n\r\n        if (request.content === \"\") {\r\n            request.content = undefined;\r\n        }\r\n        if (request.content) {\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            request.headers = request.headers || {};\r\n            if (isArrayBuffer(request.content)) {\r\n                request.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            } else {\r\n                request.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\r\n            }\r\n        }\r\n\r\n        let response: Response;\r\n        try {\r\n            response = await this._fetchType(request.url!, {\r\n                body: request.content,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method!,\r\n                mode: \"cors\",\r\n                redirect: \"follow\",\r\n                signal: abortController.signal,\r\n            });\r\n        } catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this._logger.log(\r\n                LogLevel.Warning,\r\n                `Error from HTTP request. ${e}.`,\r\n            );\r\n            throw e;\r\n        } finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n\r\n        if (!response.ok) {\r\n            const errorMessage = await deserializeContent(response, \"text\") as string;\r\n            throw new HttpError(errorMessage || response.statusText, response.status);\r\n        }\r\n\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n\r\n        return new HttpResponse(\r\n            response.status,\r\n            response.statusText,\r\n            payload,\r\n        );\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        let cookies: string = \"\";\r\n        if (Platform.isNode && this._jar) {\r\n            // @ts-ignore: unused variable\r\n            this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\n\r\nfunction deserializeContent(response: Response, responseType?: XMLHttpRequestResponseType): Promise<string | ArrayBuffer> {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n\r\n    return content;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}