{"ast":null,"code":"import _regeneratorRuntime from \"/home/nico/expero/toolkit/signalR-test/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"/home/nico/expero/toolkit/signalR-test/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/nico/expero/toolkit/signalR-test/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"/home/nico/expero/toolkit/signalR-test/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/home/nico/expero/toolkit/signalR-test/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/nico/expero/toolkit/signalR-test/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { LogLevel } from \"./ILogger\";\nimport { NullLogger } from \"./Loggers\";\n// Version token that will be replaced by the prepack command\n/** The version of the SignalR client. */\nexport var VERSION = \"7.0.5\";\n/** @private */\nexport var Arg = /*#__PURE__*/function () {\n  function Arg() {\n    _classCallCheck(this, Arg);\n  }\n  _createClass(Arg, null, [{\n    key: \"isRequired\",\n    value: function isRequired(val, name) {\n      if (val === null || val === undefined) {\n        throw new Error(\"The '\".concat(name, \"' argument is required.\"));\n      }\n    }\n  }, {\n    key: \"isNotEmpty\",\n    value: function isNotEmpty(val, name) {\n      if (!val || val.match(/^\\s*$/)) {\n        throw new Error(\"The '\".concat(name, \"' argument should not be empty.\"));\n      }\n    }\n  }, {\n    key: \"isIn\",\n    value: function isIn(val, values, name) {\n      // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\n      if (!(val in values)) {\n        throw new Error(\"Unknown \".concat(name, \" value: \").concat(val, \".\"));\n      }\n    }\n  }]);\n  return Arg;\n}();\n/** @private */\nexport var Platform = /*#__PURE__*/function () {\n  function Platform() {\n    _classCallCheck(this, Platform);\n  }\n  _createClass(Platform, null, [{\n    key: \"isBrowser\",\n    get:\n    // react-native has a window but no document so we should check both\n    function get() {\n      return typeof window === \"object\" && typeof window.document === \"object\";\n    }\n    // WebWorkers don't have a window object so the isBrowser check would fail\n  }, {\n    key: \"isWebWorker\",\n    get: function get() {\n      return typeof self === \"object\" && \"importScripts\" in self;\n    }\n    // react-native has a window but no document\n  }, {\n    key: \"isReactNative\",\n    get: function get() {\n      return typeof window === \"object\" && typeof window.document === \"undefined\";\n    }\n    // Node apps shouldn't have a window object, but WebWorkers don't either\n    // so we need to check for both WebWorker and window\n  }, {\n    key: \"isNode\",\n    get: function get() {\n      return !this.isBrowser && !this.isWebWorker && !this.isReactNative;\n    }\n  }]);\n  return Platform;\n}();\n/** @private */\nexport function getDataDetail(data, includeContent) {\n  var detail = \"\";\n  if (isArrayBuffer(data)) {\n    detail = \"Binary data of length \".concat(data.byteLength);\n    if (includeContent) {\n      detail += \". Content: '\".concat(formatArrayBuffer(data), \"'\");\n    }\n  } else if (typeof data === \"string\") {\n    detail = \"String data of length \".concat(data.length);\n    if (includeContent) {\n      detail += \". Content: '\".concat(data, \"'\");\n    }\n  }\n  return detail;\n}\n/** @private */\nexport function formatArrayBuffer(data) {\n  var view = new Uint8Array(data);\n  // Uint8Array.map only supports returning another Uint8Array?\n  var str = \"\";\n  view.forEach(function (num) {\n    var pad = num < 16 ? \"0\" : \"\";\n    str += \"0x\".concat(pad).concat(num.toString(16), \" \");\n  });\n  // Trim of trailing space.\n  return str.substr(0, str.length - 1);\n}\n// Also in signalr-protocol-msgpack/Utils.ts\n/** @private */\nexport function isArrayBuffer(val) {\n  return val && typeof ArrayBuffer !== \"undefined\" && (val instanceof ArrayBuffer ||\n  // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\n  val.constructor && val.constructor.name === \"ArrayBuffer\");\n}\n/** @private */\nexport function sendMessage(_x, _x2, _x3, _x4, _x5, _x6) {\n  return _sendMessage.apply(this, arguments);\n}\n/** @private */\nfunction _sendMessage() {\n  _sendMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(logger, transportName, httpClient, url, content, options) {\n    var headers, _getUserAgentHeader, _getUserAgentHeader2, name, value, responseType, response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          headers = {};\n          _getUserAgentHeader = getUserAgentHeader(), _getUserAgentHeader2 = _slicedToArray(_getUserAgentHeader, 2), name = _getUserAgentHeader2[0], value = _getUserAgentHeader2[1];\n          headers[name] = value;\n          logger.log(LogLevel.Trace, \"(\".concat(transportName, \" transport) sending data. \").concat(getDataDetail(content, options.logMessageContent), \".\"));\n          responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\n          _context.next = 7;\n          return httpClient.post(url, {\n            content: content,\n            headers: _objectSpread(_objectSpread({}, headers), options.headers),\n            responseType: responseType,\n            timeout: options.timeout,\n            withCredentials: options.withCredentials\n          });\n        case 7:\n          response = _context.sent;\n          logger.log(LogLevel.Trace, \"(\".concat(transportName, \" transport) request complete. Response status: \").concat(response.statusCode, \".\"));\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _sendMessage.apply(this, arguments);\n}\nexport function createLogger(logger) {\n  if (logger === undefined) {\n    return new ConsoleLogger(LogLevel.Information);\n  }\n  if (logger === null) {\n    return NullLogger.instance;\n  }\n  if (logger.log !== undefined) {\n    return logger;\n  }\n  return new ConsoleLogger(logger);\n}\n/** @private */\nexport var SubjectSubscription = /*#__PURE__*/function () {\n  function SubjectSubscription(subject, observer) {\n    _classCallCheck(this, SubjectSubscription);\n    this._subject = subject;\n    this._observer = observer;\n  }\n  _createClass(SubjectSubscription, [{\n    key: \"dispose\",\n    value: function dispose() {\n      var index = this._subject.observers.indexOf(this._observer);\n      if (index > -1) {\n        this._subject.observers.splice(index, 1);\n      }\n      if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\n        this._subject.cancelCallback().catch(function (_) {});\n      }\n    }\n  }]);\n  return SubjectSubscription;\n}();\n/** @private */\nexport var ConsoleLogger = /*#__PURE__*/function () {\n  function ConsoleLogger(minimumLogLevel) {\n    _classCallCheck(this, ConsoleLogger);\n    this._minLevel = minimumLogLevel;\n    this.out = console;\n  }\n  _createClass(ConsoleLogger, [{\n    key: \"log\",\n    value: function log(logLevel, message) {\n      if (logLevel >= this._minLevel) {\n        var msg = \"[\".concat(new Date().toISOString(), \"] \").concat(LogLevel[logLevel], \": \").concat(message);\n        switch (logLevel) {\n          case LogLevel.Critical:\n          case LogLevel.Error:\n            this.out.error(msg);\n            break;\n          case LogLevel.Warning:\n            this.out.warn(msg);\n            break;\n          case LogLevel.Information:\n            this.out.info(msg);\n            break;\n          default:\n            // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\n            this.out.log(msg);\n            break;\n        }\n      }\n    }\n  }]);\n  return ConsoleLogger;\n}();\n/** @private */\nexport function getUserAgentHeader() {\n  var userAgentHeaderName = \"X-SignalR-User-Agent\";\n  if (Platform.isNode) {\n    userAgentHeaderName = \"User-Agent\";\n  }\n  return [userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion())];\n}\n/** @private */\nexport function constructUserAgent(version, os, runtime, runtimeVersion) {\n  // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\n  var userAgent = \"Microsoft SignalR/\";\n  var majorAndMinor = version.split(\".\");\n  userAgent += \"\".concat(majorAndMinor[0], \".\").concat(majorAndMinor[1]);\n  userAgent += \" (\".concat(version, \"; \");\n  if (os && os !== \"\") {\n    userAgent += \"\".concat(os, \"; \");\n  } else {\n    userAgent += \"Unknown OS; \";\n  }\n  userAgent += \"\".concat(runtime);\n  if (runtimeVersion) {\n    userAgent += \"; \".concat(runtimeVersion);\n  } else {\n    userAgent += \"; Unknown Runtime Version\";\n  }\n  userAgent += \")\";\n  return userAgent;\n}\n// eslint-disable-next-line spaced-comment\n/*#__PURE__*/\nfunction getOsName() {\n  if (Platform.isNode) {\n    switch (process.platform) {\n      case \"win32\":\n        return \"Windows NT\";\n      case \"darwin\":\n        return \"macOS\";\n      case \"linux\":\n        return \"Linux\";\n      default:\n        return process.platform;\n    }\n  } else {\n    return \"\";\n  }\n}\n// eslint-disable-next-line spaced-comment\n/*#__PURE__*/\nfunction getRuntimeVersion() {\n  if (Platform.isNode) {\n    return process.versions.node;\n  }\n  return undefined;\n}\nfunction getRuntime() {\n  if (Platform.isNode) {\n    return \"NodeJS\";\n  } else {\n    return \"Browser\";\n  }\n}\n/** @private */\nexport function getErrorString(e) {\n  if (e.stack) {\n    return e.stack;\n  } else if (e.message) {\n    return e.message;\n  }\n  return \"\".concat(e);\n}\n/** @private */\nexport function getGlobalThis() {\n  // globalThis is semi-new and not available in Node until v12\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw new Error(\"could not find global\");\n}","map":{"version":3,"names":["LogLevel","NullLogger","VERSION","Arg","_classCallCheck","_createClass","key","value","isRequired","val","name","undefined","Error","concat","isNotEmpty","match","isIn","values","Platform","get","window","document","self","isBrowser","isWebWorker","isReactNative","getDataDetail","data","includeContent","detail","isArrayBuffer","byteLength","formatArrayBuffer","length","view","Uint8Array","str","forEach","num","pad","toString","substr","ArrayBuffer","constructor","sendMessage","_x","_x2","_x3","_x4","_x5","_x6","_sendMessage","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","logger","transportName","httpClient","url","content","options","headers","_getUserAgentHeader","_getUserAgentHeader2","responseType","response","wrap","_callee$","_context","prev","next","getUserAgentHeader","_slicedToArray","log","Trace","logMessageContent","post","_objectSpread","timeout","withCredentials","sent","statusCode","stop","createLogger","ConsoleLogger","Information","instance","SubjectSubscription","subject","observer","_subject","_observer","dispose","index","observers","indexOf","splice","cancelCallback","catch","_","minimumLogLevel","_minLevel","out","console","logLevel","message","msg","Date","toISOString","Critical","error","Warning","warn","info","userAgentHeaderName","isNode","constructUserAgent","getOsName","getRuntime","getRuntimeVersion","version","os","runtime","runtimeVersion","userAgent","majorAndMinor","split","process","platform","versions","node","getErrorString","e","stack","getGlobalThis","globalThis","global"],"sources":["/home/nico/expero/toolkit/signalR-test/client/node_modules/@microsoft/signalr/src/Utils.ts"],"sourcesContent":["// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\n\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\n\r\nexport const VERSION: string = \"0.0.0-DEV_BUILD\";\r\n/** @private */\r\nexport class Arg {\r\n    public static isRequired(val: any, name: string): void {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    public static isNotEmpty(val: string, name: string): void {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n\r\n    public static isIn(val: any, values: any, name: string): void {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class Platform {\r\n    // react-native has a window but no document so we should check both\r\n    public static get isBrowser(): boolean {\r\n        return typeof window === \"object\" && typeof window.document === \"object\";\r\n    }\r\n\r\n    // WebWorkers don't have a window object so the isBrowser check would fail\r\n    public static get isWebWorker(): boolean {\r\n        return typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n\r\n    // react-native has a window but no document\r\n    static get isReactNative(): boolean {\r\n        return typeof window === \"object\" && typeof window.document === \"undefined\";\r\n    }\r\n\r\n    // Node apps shouldn't have a window object, but WebWorkers don't either\r\n    // so we need to check for both WebWorker and window\r\n    public static get isNode(): boolean {\r\n        return !this.isBrowser && !this.isWebWorker && !this.isReactNative;\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getDataDetail(data: any, includeContent: boolean): string {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    } else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n\r\n/** @private */\r\nexport function formatArrayBuffer(data: ArrayBuffer): string {\r\n    const view = new Uint8Array(data);\r\n\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val: any): val is ArrayBuffer {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n\r\n/** @private */\r\nexport async function sendMessage(logger: ILogger, transportName: string, httpClient: HttpClient, url: string,\r\n                                  content: string | ArrayBuffer, options: IHttpConnectionOptions): Promise<void> {\r\n    const headers: {[k: string]: string} = {};\r\n\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent!)}.`);\r\n\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...options.headers},\r\n        responseType,\r\n        timeout: options.timeout,\r\n        withCredentials: options.withCredentials,\r\n    });\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n\r\n/** @private */\r\nexport function createLogger(logger?: ILogger | LogLevel): ILogger {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n\r\n    if ((logger as ILogger).log !== undefined) {\r\n        return logger as ILogger;\r\n    }\r\n\r\n    return new ConsoleLogger(logger as LogLevel);\r\n}\r\n\r\n/** @private */\r\nexport class SubjectSubscription<T> implements ISubscription<T> {\r\n    private _subject: Subject<T>;\r\n    private _observer: IStreamSubscriber<T>;\r\n\r\n    constructor(subject: Subject<T>, observer: IStreamSubscriber<T>) {\r\n        this._subject = subject;\r\n        this._observer = observer;\r\n    }\r\n\r\n    public dispose(): void {\r\n        const index: number = this._subject.observers.indexOf(this._observer);\r\n        if (index > -1) {\r\n            this._subject.observers.splice(index, 1);\r\n        }\r\n\r\n        if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\r\n            this._subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class ConsoleLogger implements ILogger {\r\n    private readonly _minLevel: LogLevel;\r\n\r\n    // Public for testing purposes.\r\n    public out: {\r\n        error(message: any): void,\r\n        warn(message: any): void,\r\n        info(message: any): void,\r\n        log(message: any): void,\r\n    };\r\n\r\n    constructor(minimumLogLevel: LogLevel) {\r\n        this._minLevel = minimumLogLevel;\r\n        this.out = console;\r\n    }\r\n\r\n    public log(logLevel: LogLevel, message: string): void {\r\n        if (logLevel >= this._minLevel) {\r\n            const msg = `[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`;\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.out.error(msg);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.out.warn(msg);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.out.info(msg);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.out.log(msg);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getUserAgentHeader(): [string, string] {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [ userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion()) ];\r\n}\r\n\r\n/** @private */\r\nexport function constructUserAgent(version: string, os: string, runtime: string, runtimeVersion: string | undefined): string {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent: string = \"Microsoft SignalR/\";\r\n\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    } else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n\r\n    userAgent += `${runtime}`;\r\n\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    } else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getOsName(): string {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getRuntimeVersion(): string | undefined {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getRuntime(): string {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    } else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getErrorString(e: any): string {\r\n    if (e.stack) {\r\n        return e.stack;\r\n    } else if (e.message) {\r\n        return e.message;\r\n    }\r\n    return `${e}`;\r\n}\r\n\r\n/** @private */\r\nexport function getGlobalThis(): unknown {\r\n    // globalThis is semi-new and not available in Node until v12\r\n    if (typeof globalThis !== \"undefined\") {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    if (typeof global !== \"undefined\") {\r\n        return global;\r\n    }\r\n    throw new Error(\"could not find global\");\r\n}"],"mappings":";;;;;;AAAA;AACA;AAGA,SAAkBA,QAAQ,QAAQ,WAAW;AAC7C,SAASC,UAAU,QAAQ,WAAW;AAKtC;AACA;AAEA,OAAO,IAAMC,OAAO,GAAW;AAC/B;AACA,WAAaC,GAAG;EAAA,SAAAA,IAAA;IAAAC,eAAA,OAAAD,GAAA;EAAA;EAAAE,YAAA,CAAAF,GAAA;IAAAG,GAAA;IAAAC,KAAA,EACL,SAAAC,WAAkBC,GAAQ,EAAEC,IAAY;MAC3C,IAAID,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAKE,SAAS,EAAE;QACnC,MAAM,IAAIC,KAAK,SAAAC,MAAA,CAASH,IAAI,4BAAyB,CAAC;;IAE9D;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EACM,SAAAO,WAAkBL,GAAW,EAAEC,IAAY;MAC9C,IAAI,CAACD,GAAG,IAAIA,GAAG,CAACM,KAAK,CAAC,OAAO,CAAC,EAAE;QAC5B,MAAM,IAAIH,KAAK,SAAAC,MAAA,CAASH,IAAI,oCAAiC,CAAC;;IAEtE;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EAEM,SAAAS,KAAYP,GAAQ,EAAEQ,MAAW,EAAEP,IAAY;MAClD;MACA,IAAI,EAAED,GAAG,IAAIQ,MAAM,CAAC,EAAE;QAClB,MAAM,IAAIL,KAAK,YAAAC,MAAA,CAAYH,IAAI,cAAAG,MAAA,CAAWJ,GAAG,MAAG,CAAC;;IAEzD;EAAC;EAAA,OAAAN,GAAA;AAAA;AAGL;AACA,WAAae,QAAQ;EAAA,SAAAA,SAAA;IAAAd,eAAA,OAAAc,QAAA;EAAA;EAAAb,YAAA,CAAAa,QAAA;IAAAZ,GAAA;IAAAa,GAAA;IACjB;IACO,SAAAA,IAAA,EAAoB;MACvB,OAAO,OAAOC,MAAM,KAAK,QAAQ,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,QAAQ;IAC5E;IAEA;EAAA;IAAAf,GAAA;IAAAa,GAAA,EACO,SAAAA,IAAA,EAAsB;MACzB,OAAO,OAAOG,IAAI,KAAK,QAAQ,IAAI,eAAe,IAAIA,IAAI;IAC9D;IAEA;EAAA;IAAAhB,GAAA;IAAAa,GAAA,EACA,SAAAA,IAAA,EAAwB;MACpB,OAAO,OAAOC,MAAM,KAAK,QAAQ,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,WAAW;IAC/E;IAEA;IACA;EAAA;IAAAf,GAAA;IAAAa,GAAA,EACO,SAAAA,IAAA,EAAiB;MACpB,OAAO,CAAC,IAAI,CAACI,SAAS,IAAI,CAAC,IAAI,CAACC,WAAW,IAAI,CAAC,IAAI,CAACC,aAAa;IACtE;EAAC;EAAA,OAAAP,QAAA;AAAA;AAGL;AACA,OAAM,SAAUQ,aAAaA,CAACC,IAAS,EAAEC,cAAuB;EAC5D,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,aAAa,CAACH,IAAI,CAAC,EAAE;IACrBE,MAAM,4BAAAhB,MAAA,CAA4Bc,IAAI,CAACI,UAAU,CAAE;IACnD,IAAIH,cAAc,EAAE;MAChBC,MAAM,mBAAAhB,MAAA,CAAmBmB,iBAAiB,CAACL,IAAI,CAAC,MAAG;;GAE1D,MAAM,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IACjCE,MAAM,4BAAAhB,MAAA,CAA4Bc,IAAI,CAACM,MAAM,CAAE;IAC/C,IAAIL,cAAc,EAAE;MAChBC,MAAM,mBAAAhB,MAAA,CAAmBc,IAAI,MAAG;;;EAGxC,OAAOE,MAAM;AACjB;AAEA;AACA,OAAM,SAAUG,iBAAiBA,CAACL,IAAiB;EAC/C,IAAMO,IAAI,GAAG,IAAIC,UAAU,CAACR,IAAI,CAAC;EAEjC;EACA,IAAIS,GAAG,GAAG,EAAE;EACZF,IAAI,CAACG,OAAO,CAAC,UAACC,GAAG,EAAI;IACjB,IAAMC,GAAG,GAAGD,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE;IAC/BF,GAAG,SAAAvB,MAAA,CAAS0B,GAAG,EAAA1B,MAAA,CAAGyB,GAAG,CAACE,QAAQ,CAAC,EAAE,CAAC,MAAG;EACzC,CAAC,CAAC;EAEF;EACA,OAAOJ,GAAG,CAACK,MAAM,CAAC,CAAC,EAAEL,GAAG,CAACH,MAAM,GAAG,CAAC,CAAC;AACxC;AAEA;AACA;AACA,OAAM,SAAUH,aAAaA,CAACrB,GAAQ;EAClC,OAAOA,GAAG,IAAI,OAAOiC,WAAW,KAAK,WAAW,KAC3CjC,GAAG,YAAYiC,WAAW;EACvB;EACCjC,GAAG,CAACkC,WAAW,IAAIlC,GAAG,CAACkC,WAAW,CAACjC,IAAI,KAAK,aAAc,CAAC;AACxE;AAEA;AACA,gBAAsBkC,WAAWA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAqBjC;AAAA,SAAAF,aAAA;EAAAA,YAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CArBO,SAAAC,QAA2BC,MAAe,EAAEC,aAAqB,EAAEC,UAAsB,EAAEC,GAAW,EAC3EC,OAA6B,EAAEC,OAA+B;IAAA,IAAAC,OAAA,EAAAC,mBAAA,EAAAC,oBAAA,EAAAxD,IAAA,EAAAH,KAAA,EAAA4D,YAAA,EAAAC,QAAA;IAAA,OAAAb,mBAAA,GAAAc,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UACtFT,OAAO,GAA0B,EAAE;UAAAC,mBAAA,GAEnBS,kBAAkB,EAAE,EAAAR,oBAAA,GAAAS,cAAA,CAAAV,mBAAA,MAAnCvD,IAAI,GAAAwD,oBAAA,KAAE3D,KAAK,GAAA2D,oBAAA;UAClBF,OAAO,CAACtD,IAAI,CAAC,GAAGH,KAAK;UAErBmD,MAAM,CAACkB,GAAG,CAAC5E,QAAQ,CAAC6E,KAAK,MAAAhE,MAAA,CAAM8C,aAAa,gCAAA9C,MAAA,CAA6Ba,aAAa,CAACoC,OAAO,EAAEC,OAAO,CAACe,iBAAkB,CAAC,MAAG,CAAC;UAEzHX,YAAY,GAAGrC,aAAa,CAACgC,OAAO,CAAC,GAAG,aAAa,GAAG,MAAM;UAAAS,QAAA,CAAAE,IAAA;UAAA,OAC7Cb,UAAU,CAACmB,IAAI,CAAClB,GAAG,EAAE;YACxCC,OAAO,EAAPA,OAAO;YACPE,OAAO,EAAAgB,aAAA,CAAAA,aAAA,KAAOhB,OAAO,GAAKD,OAAO,CAACC,OAAO,CAAC;YAC1CG,YAAY,EAAZA,YAAY;YACZc,OAAO,EAAElB,OAAO,CAACkB,OAAO;YACxBC,eAAe,EAAEnB,OAAO,CAACmB;WAC5B,CAAC;QAAA;UANId,QAAQ,GAAAG,QAAA,CAAAY,IAAA;UAQdzB,MAAM,CAACkB,GAAG,CAAC5E,QAAQ,CAAC6E,KAAK,MAAAhE,MAAA,CAAM8C,aAAa,qDAAA9C,MAAA,CAAkDuD,QAAQ,CAACgB,UAAU,MAAG,CAAC;QAAC;QAAA;UAAA,OAAAb,QAAA,CAAAc,IAAA;MAAA;IAAA,GAAA5B,OAAA;EAAA,CACzH;EAAA,OAAAN,YAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAGD,OAAM,SAAUiC,YAAYA,CAAC5B,MAA2B;EACpD,IAAIA,MAAM,KAAK/C,SAAS,EAAE;IACtB,OAAO,IAAI4E,aAAa,CAACvF,QAAQ,CAACwF,WAAW,CAAC;;EAGlD,IAAI9B,MAAM,KAAK,IAAI,EAAE;IACjB,OAAOzD,UAAU,CAACwF,QAAQ;;EAG9B,IAAK/B,MAAkB,CAACkB,GAAG,KAAKjE,SAAS,EAAE;IACvC,OAAO+C,MAAiB;;EAG5B,OAAO,IAAI6B,aAAa,CAAC7B,MAAkB,CAAC;AAChD;AAEA;AACA,WAAagC,mBAAmB;EAI5B,SAAAA,oBAAYC,OAAmB,EAAEC,QAA8B;IAAAxF,eAAA,OAAAsF,mBAAA;IAC3D,IAAI,CAACG,QAAQ,GAAGF,OAAO;IACvB,IAAI,CAACG,SAAS,GAAGF,QAAQ;EAC7B;EAACvF,YAAA,CAAAqF,mBAAA;IAAApF,GAAA;IAAAC,KAAA,EAEM,SAAAwF,QAAA,EAAO;MACV,IAAMC,KAAK,GAAW,IAAI,CAACH,QAAQ,CAACI,SAAS,CAACC,OAAO,CAAC,IAAI,CAACJ,SAAS,CAAC;MACrE,IAAIE,KAAK,GAAG,CAAC,CAAC,EAAE;QACZ,IAAI,CAACH,QAAQ,CAACI,SAAS,CAACE,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;;MAG5C,IAAI,IAAI,CAACH,QAAQ,CAACI,SAAS,CAAChE,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC4D,QAAQ,CAACO,cAAc,EAAE;QACtE,IAAI,CAACP,QAAQ,CAACO,cAAc,EAAE,CAACC,KAAK,CAAC,UAACC,CAAC,EAAI,CAAG,CAAC,CAAC;;IAExD;EAAC;EAAA,OAAAZ,mBAAA;AAAA;AAGL;AACA,WAAaH,aAAa;EAWtB,SAAAA,cAAYgB,eAAyB;IAAAnG,eAAA,OAAAmF,aAAA;IACjC,IAAI,CAACiB,SAAS,GAAGD,eAAe;IAChC,IAAI,CAACE,GAAG,GAAGC,OAAO;EACtB;EAACrG,YAAA,CAAAkF,aAAA;IAAAjF,GAAA;IAAAC,KAAA,EAEM,SAAAqE,IAAI+B,QAAkB,EAAEC,OAAe;MAC1C,IAAID,QAAQ,IAAI,IAAI,CAACH,SAAS,EAAE;QAC5B,IAAMK,GAAG,OAAAhG,MAAA,CAAO,IAAIiG,IAAI,EAAE,CAACC,WAAW,EAAE,QAAAlG,MAAA,CAAKb,QAAQ,CAAC2G,QAAQ,CAAC,QAAA9F,MAAA,CAAK+F,OAAO,CAAE;QAC7E,QAAQD,QAAQ;UACZ,KAAK3G,QAAQ,CAACgH,QAAQ;UACtB,KAAKhH,QAAQ,CAACY,KAAK;YACf,IAAI,CAAC6F,GAAG,CAACQ,KAAK,CAACJ,GAAG,CAAC;YACnB;UACJ,KAAK7G,QAAQ,CAACkH,OAAO;YACjB,IAAI,CAACT,GAAG,CAACU,IAAI,CAACN,GAAG,CAAC;YAClB;UACJ,KAAK7G,QAAQ,CAACwF,WAAW;YACrB,IAAI,CAACiB,GAAG,CAACW,IAAI,CAACP,GAAG,CAAC;YAClB;UACJ;YACI;YACA,IAAI,CAACJ,GAAG,CAAC7B,GAAG,CAACiC,GAAG,CAAC;YACjB;;;IAGhB;EAAC;EAAA,OAAAtB,aAAA;AAAA;AAGL;AACA,OAAM,SAAUb,kBAAkBA,CAAA;EAC9B,IAAI2C,mBAAmB,GAAG,sBAAsB;EAChD,IAAInG,QAAQ,CAACoG,MAAM,EAAE;IACjBD,mBAAmB,GAAG,YAAY;;EAEtC,OAAO,CAAEA,mBAAmB,EAAEE,kBAAkB,CAACrH,OAAO,EAAEsH,SAAS,EAAE,EAAEC,UAAU,EAAE,EAAEC,iBAAiB,EAAE,CAAC,CAAE;AAC/G;AAEA;AACA,OAAM,SAAUH,kBAAkBA,CAACI,OAAe,EAAEC,EAAU,EAAEC,OAAe,EAAEC,cAAkC;EAC/G;EACA,IAAIC,SAAS,GAAW,oBAAoB;EAE5C,IAAMC,aAAa,GAAGL,OAAO,CAACM,KAAK,CAAC,GAAG,CAAC;EACxCF,SAAS,OAAAlH,MAAA,CAAOmH,aAAa,CAAC,CAAC,CAAC,OAAAnH,MAAA,CAAImH,aAAa,CAAC,CAAC,CAAC,CAAE;EACtDD,SAAS,SAAAlH,MAAA,CAAS8G,OAAO,OAAI;EAE7B,IAAIC,EAAE,IAAIA,EAAE,KAAK,EAAE,EAAE;IACjBG,SAAS,OAAAlH,MAAA,CAAO+G,EAAE,OAAI;GACzB,MAAM;IACHG,SAAS,IAAI,cAAc;;EAG/BA,SAAS,OAAAlH,MAAA,CAAOgH,OAAO,CAAE;EAEzB,IAAIC,cAAc,EAAE;IAChBC,SAAS,SAAAlH,MAAA,CAASiH,cAAc,CAAE;GACrC,MAAM;IACHC,SAAS,IAAI,2BAA2B;;EAG5CA,SAAS,IAAI,GAAG;EAChB,OAAOA,SAAS;AACpB;AAEA;AACA;AAAc,SAASP,SAASA,CAAA;EAC5B,IAAItG,QAAQ,CAACoG,MAAM,EAAE;IACjB,QAAQY,OAAO,CAACC,QAAQ;MACpB,KAAK,OAAO;QACR,OAAO,YAAY;MACvB,KAAK,QAAQ;QACT,OAAO,OAAO;MAClB,KAAK,OAAO;QACR,OAAO,OAAO;MAClB;QACI,OAAOD,OAAO,CAACC,QAAQ;;GAElC,MAAM;IACH,OAAO,EAAE;;AAEjB;AAEA;AACA;AAAc,SAAST,iBAAiBA,CAAA;EACpC,IAAIxG,QAAQ,CAACoG,MAAM,EAAE;IACjB,OAAOY,OAAO,CAACE,QAAQ,CAACC,IAAI;;EAEhC,OAAO1H,SAAS;AACpB;AAEA,SAAS8G,UAAUA,CAAA;EACf,IAAIvG,QAAQ,CAACoG,MAAM,EAAE;IACjB,OAAO,QAAQ;GAClB,MAAM;IACH,OAAO,SAAS;;AAExB;AAEA;AACA,OAAM,SAAUgB,cAAcA,CAACC,CAAM;EACjC,IAAIA,CAAC,CAACC,KAAK,EAAE;IACT,OAAOD,CAAC,CAACC,KAAK;GACjB,MAAM,IAAID,CAAC,CAAC3B,OAAO,EAAE;IAClB,OAAO2B,CAAC,CAAC3B,OAAO;;EAEpB,UAAA/F,MAAA,CAAU0H,CAAC;AACf;AAEA;AACA,OAAM,SAAUE,aAAaA,CAAA;EACzB;EACA,IAAI,OAAOC,UAAU,KAAK,WAAW,EAAE;IACnC,OAAOA,UAAU;;EAErB,IAAI,OAAOpH,IAAI,KAAK,WAAW,EAAE;IAC7B,OAAOA,IAAI;;EAEf,IAAI,OAAOF,MAAM,KAAK,WAAW,EAAE;IAC/B,OAAOA,MAAM;;EAEjB,IAAI,OAAOuH,MAAM,KAAK,WAAW,EAAE;IAC/B,OAAOA,MAAM;;EAEjB,MAAM,IAAI/H,KAAK,CAAC,uBAAuB,CAAC;AAC5C"},"metadata":{},"sourceType":"module","externalDependencies":[]}